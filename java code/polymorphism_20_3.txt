3.polymorphism
step:1

model.1:
class Adder{
    static int add(int a,int b){
        return a+b;
        
    }  
    static int add(int a,int b,int c){
        return a+b+c;
        
    } 
}
class Main{
    public static void main(String[] args){
        System.out.println(Adder.add(11,11)); 
        System.out.println(Adder.add(11,13,11)); 
    }
}
ans:
22
35

model.2:
class Adder{
    static int add(int a,int b){
        return a+b;
        
    }  
    static double add(double a,double b,double c){
        return a+b+c;
        
    } 
}
class Main{
    public static void main(String[] args){
        System.out.println(Adder.add(11,11)); 
        System.out.println(Adder.add(11.7,13.455,11.77)); 
    }
}
ans:
22
36.925

model.3:

class Main{  
  void sum(int a,long b){
      System.out.println(a+b);
  }  
  void sum(int a,int b,int c){
      System.out.println(a+b+c);
  }  
  public static void main(String args[]){  
  Main obj=new Main();  
  obj.sum(20,20);  
  obj.sum(20,20,20);  
  }  
}
ans:
40
60
======================================================================================
step:2
model.1:
class Vehicle{  
  void run(){
      System.out.println("Vehicle is running");
  }  
}  
class Main extends Vehicle{  
  public static void main(String args[]){  
  Main obj = new Main();  
  obj.run();  
  }  
}
ans:
Vechicle is running
model.2:
class Vehicle{  
  void run(){
      System.out.println("Vehicle is running");
  }  
}  
class Main extends Vehicle{ 
    void run(){
       System.out.println("Vehicle is not running"); 
    }
  public static void main(String args[]){  
  Main obj = new Main();  
  obj.run();  
  Vehicle myObj=new Vehicle();
  myObj.run();
  }  
}